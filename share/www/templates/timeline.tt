<!DOCTYPE html>
<html>
  <head>
    <title>[% timeline_name %] - BusyBird</title>
    <meta content="text/html; charset=UTF-8" http-equiv="Content-Type"/>
    <link rel="stylesheet" href="[% script_name %]/static/bootstrap/css/bootstrap.min.css" type="text/css" media="screen" />
    <link rel="stylesheet" href="[% script_name %]/static/busybird.css" type="text/css" media="screen" />
    <link rel="stylesheet" href="[% script_name %]/static/bootstrap/css/bootstrap-responsive.min.css" type="text/css" media="screen" />
  </head>
  <body>
    <div class="navbar navbar-inverse navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid">
          <a class="brand" href="#">BusyBird</a>
          <ul class="nav pull-left">
            <li class="active"><a>[% timeline_name %]</a></li>
            <li class="divider-vertical"></li>
          </ul>
          <div id="bb-indicator" class="navbar-text pull-left">
            <span id="bb-msg"></span>
          </div>
          <div class="navbar-form pull-right">
            <div class="btn-group pull-right bb-nav-button-group">
              <a class="btn btn-inverse" href="[% post_button_url %]" target="_blank"><i class="icon-pencil icon-white"></i></a>
            </div>
          </div>
          <div class="navbar-text pull-right">
            <span class="label">Lv. <span class="bb-threshold-level">0</span></span>
          </div>
          <div class="navbar-form pull-right">
            <div class="btn-group pull-right bb-nav-button-group">
              <a id="bb-button-incriment-threshold-level" class="btn btn-inverse" href="#">
                <i class="icon-zoom-out icon-white"></i>
              </a>
              <a id="bb-button-decriment-threshold-level" class="btn btn-inverse" href="#">
                <i class="icon-zoom-in icon-white"></i>
              </a>
            </div>
            <div class="btn-group pull-left bb-nav-button-group">
              <a id="bb-new-statuses-button" class="btn btn-inverse disabled" href="#">
                New <span class="bb-new-statuses-num badge">0</span>
              </a>
            </div>
          </div>
          <div id="bb-spinner-placeholder"></div>
        </div>
      </div>
    </div>

    <div class="container-fluid">
      <div class="row-fluid">
        <div class="span2">
          <div class="sidebar-nav sidebar-nav-fixed" id="sidebar">
            <div class="accordion" id="bb-statuses-summary"></div>
          </div>
        </div>
        <div class="span8">
          <ul id="statuses" class="unstyled">
          </ul>
          <div id="main-footer">
            <a class="btn btn-primary" id="bb-more-button" data-loading-text="Loading..." href="#">More...</a>
          </div>
        </div>
      </div>
    </div>
    
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script type="text/javascript" src="[% script_name %]/static/spin.js"></script>
    <script type="text/javascript" src="[% script_name %]/static/q.js"></script>
    <script type="text/javascript" src="[% script_name %]/static/busybird.js"></script>
    <script type="text/javascript" src="[% script_name %]/static/timeline.js"></script>
    <script type="text/javascript" src="[% script_name %]/static/bootstrap/js/bootstrap.js"></script>
    <script type="text/javascript">
"use strict";

(function() {
    var showMaxReached = function(is_loading_max_reached, message_banner) {
        if(!is_loading_max_reached) return;
        var message = "Too many unread statuses. Some of them are not loaded here.";
        message_banner.show(message, "warn");
        console.warn(message);
    };
    
    var NewStatusesButton = function(args) {
        // @params: args.unackedCountsPoller, args.spinner, args.statusContainer, args.messageBanner, args.statusesSummary
        var self = this;
        var poller = args.unackedCountsPoller;
        self.enabled = false;
        self.now_loading = false;
        self.spinner = args.spinner;
        self.status_container = args.statusContainer;
        self.message_banner = args.messageBanner;
        self.statuses_summary = args.statusesSummary;
        self.cur_unacked_counts = {total: 0};

        self._setEnabled(false);
        $("#bb-new-statuses-button").on("click", function() { self.trigger(); return false; });
        poller.listenOnChange(function(unacked_counts) {
            self.cur_unacked_counts = unacked_counts;
            self._updateUnackedCountView();
        });
        self.status_container.listenOnThresholdLevelChanged(function() {
            self._updateUnackedCountView();
        });
    };
    NewStatusesButton.prototype = {
        _setEnabled: function(new_state) {
            var self = this;
            var $button = $("#bb-new-statuses-button");
            self.enabled = new_state;
            if(self.enabled) {
                $button.removeClass("disabled");
            }else {
                $button.addClass("disabled");
            }
        },
        _updateUnackedCountView: function() {
            var self = this;
            var visible_count = self._visibleUnackedCount();
            document.title = (visible_count > 0 ? '('+ visible_count +') ' : "") + document.title.replace(/^\([0-9]*\) */, "");
            $(".bb-new-statuses-num").text(visible_count);
            if(visible_count > 0 && !self.now_loading) {
                self._setEnabled(true);
            }else {
                self._setEnabled(false);
            }
        },
        _visibleUnackedCount: function() {
            var self = this;
            var visible_count = 0;
            var cur_threshold_level = self.status_container.getThresholdLevel();
            $.each(self.cur_unacked_counts, function(level, count) {
                if(level === "total") return true;
                level = parseInt(level, 10);
                if(level >= cur_threshold_level) {
                    visible_count += count;
                }
            });
            return visible_count;
        },
        trigger: function() {
            var self = this;
            if(!self.enabled) return;
            self._setEnabled(false);
            self.now_loading = true;
            self.spinner.begin();
            self.status_container.loadUnackedStatuses().then(function(result) {
                showMaxReached(result.maxReached, self.message_banner);
                self.statuses_summary.showSummaryOf($(result.statuses));
            }).fail(function(error) {
                console.error(error);
                self.message_banner.show(error, "error");
            }).then(function() {
                self.spinner.end();
                self.now_loading = false;
                self._updateUnackedCountView();
            });
        }
    };
    var MoreStatusesButton = function(args) {
        // @params: args.spinner, args.messageBanner, args.statusContainer
        var self = this;
        self.enabled = true;
        self.spinner = args.spinner;
        self.message_banner = args.messageBanner;
        self.status_container = args.statusContainer;
        self._setEnabled(true);
        $("#bb-more-button").on("click", function() { self.trigger(); return false; });
    };
    MoreStatusesButton.prototype = {
        trigger: function() {
            var self = this;
            if(!self.enabled) return;
            self._setEnabled(false);
            self.spinner.begin();
            self.status_container.loadMoreStatuses().fail(function(error) {
                self.message_banner.show(error, "error");
            }).then(function() {
                self.spinner.end();
                self._setEnabled(true);
            });
        },
        _setEnabled: function(new_state) {
            this.enabled = new_state;
            $("#bb-more-button").button(this.enabled ? "reset" : "loading");
        }
    };
    var ThresholdLevelButton = function(args) {
        // @params: args.spinner, args.statusContainer;
        var self = this;
        self.enabled = true;
        self.spinner = args.spinner;
        self.status_container = args.statusContainer;
        self._setEnabled(true);
        $("#bb-button-incriment-threshold-level").on("click", function() { self.levelUp(); return false; });
        $("#bb-button-decriment-threshold-level").on("click", function() { self.levelDown(); return false; });
        $(".bb-threshold-level").text(self.status_container.getThresholdLevel());
        self.status_container.listenOnThresholdLevelChanged(function(new_threshold) {
            $(".bb-threshold-level").text(new_threshold);
        });
    };
    ThresholdLevelButton.prototype = {
        _setEnabled: function(new_state) {
            var self = this;
            var $target = $("#bb-button-incriment-threshold-level").add("#bb-button-decriment-threshold-level");
            self.enabled = new_state;
            if(self.enabled) {
                $target.removeClass("disabled");
            }else {
                $target.addClass("disabled");
            }
        },
        _levelChange: function(relative_level) {
            var self = this;
            var cur_level;
            if(!self.enabled) return;
            self._setEnabled(false);
            cur_level = self.status_container.getThresholdLevel();
            self.spinner.begin();
            self.status_container.setThresholdLevel(cur_level + relative_level).fail(function(error) {
                console.error("Unexpected error while changing level");
                console.error(error);
            }).then(function() {
                self.spinner.end();
                self._setEnabled(true);
            });
        },
        levelUp: function() { this._levelChange(+1) },
        levelDown: function() { this._levelChange(-1) }
    };

    $(function() {
        var spinner = new bb.Spinner("#bb-spinner-placeholder");
        var message_banner = new bb.MessageBanner("#bb-msg");
        var status_container = new bb.StatusContainer({
            selectorContainer: "#statuses", timeline: '[% timeline_name | js %]',
            apiBase: '[% script_name | js %]'
        });
        var unacked_counts_poller = new bb.TimelineUnackedCountsPoller({
            statusContainer: status_container
        });
        var statuses_summary = new bb.StatusesSummary({
            selectorContainer: "#bb-statuses-summary"
        });
        var new_statuses_button = new NewStatusesButton({
            unackedCountsPoller: unacked_counts_poller,
            spinner: spinner, statusContainer: status_container,
            messageBanner: message_banner, statusesSummary: statuses_summary
        });
        var more_statuses_button = new MoreStatusesButton({
            spinner: spinner, messageBanner: message_banner,
            statusContainer: status_container
        });
        var threshold_level_button = new ThresholdLevelButton({
            spinner: spinner, statusContainer: status_container
        });

        spinner.begin();
        status_container.loadInit().then(function(result) {
            message_banner.show("Initialized");
            showMaxReached(result.maxReached, message_banner);
            statuses_summary.showSummaryOf($(result.statuses));
        }, function(reason) {
            message_banner.show(reason, "error");
            console.error(reason);
        }).then(function() {
            spinner.end();
            unacked_counts_poller.start();
        });
    });
})();
    </script>
  </body>
</html>
